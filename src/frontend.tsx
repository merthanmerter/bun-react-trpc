/**
 * This file is the entry point for the React app, it sets up the root
 * element and renders the App component to the DOM.
 *
 * It is included in `src/index.html`.
 */

import { queryClient } from "@/lib/query-client";
import { TRPCProvider, trpc, trpcClient } from "@/lib/trpc-client";
import { indexRoute } from "@/routes";
import { rootRoute } from "@/routes/_root";
import { aboutRoute } from "@/routes/about";
import { QueryClientProvider } from "@tanstack/react-query";
import { RouterProvider, createRouter } from "@tanstack/react-router";
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import { Toaster } from "./components/ui/sonner";
/*
This is generated by tailwind cli as bun 
tailwind plugin is not stable enough.
https://github.com/oven-sh/bun/issues/12878
*/
import "./styles/output.css";

/**
 * We use code-based route configuration. ðŸ˜ž
 */
const routeTree = rootRoute.addChildren([indexRoute, aboutRoute]);

const router = createRouter({
  routeTree,
  context: {
    queryClient,
    trpc,
  },
  defaultPreload: "intent",
  Wrap: ({ children }) => (
    <QueryClientProvider client={queryClient}>
      <TRPCProvider
        trpcClient={trpcClient}
        queryClient={queryClient}>
        {children}
        <Toaster />
      </TRPCProvider>
    </QueryClientProvider>
  ),
});

declare module "@tanstack/react-router" {
  interface Register {
    router: typeof router;
  }
}

const elem = document.getElementById("root")!;
const app = (
  <StrictMode>
    <RouterProvider router={router} />
  </StrictMode>
);
if (import.meta.hot) {
  // With hot module reloading, `import.meta.hot.data` is persisted.
  const root = (import.meta.hot.data.root ??= createRoot(elem));
  root.render(app);
} else {
  // The hot module reloading API is not available in production.
  createRoot(elem).render(app);
}
